{"ast":null,"code":"import X2JS from \"x2js\";\n// Used as a workaround for Cross Origin Security Policy\nconst ALL_ORIGINS_BASE_URL = \"https://api.allorigins.win/get?url=\";\nconst x2js = new X2JS();\nexport const getArticles = async category => {\n  const resRaw = await fetch(ALL_ORIGINS_BASE_URL + category.url);\n  const resJson = await resRaw.json();\n  const resXml = resJson.contents;\n  return x2js.xml2js(resXml).rss.channel.item;\n};\nexport const getArticleText = async article => {\n  var _tmpEl$querySelector;\n\n  const resRaw = await fetch(ALL_ORIGINS_BASE_URL + article.link);\n  const resJson = await resRaw.json();\n  const resHtml = resJson.contents;\n  const tmpEl = document.createElement(\"html\");\n  tmpEl.innerHTML = resHtml;\n  const body = (_tmpEl$querySelector = tmpEl.querySelector(\".news-txt\")) === null || _tmpEl$querySelector === void 0 ? void 0 : _tmpEl$querySelector.innerHTML;\n  tmpEl.remove();\n  return body;\n};","map":{"version":3,"sources":["/Users/matteolobello/Developer/Matteo/ansa-reader/src/api/api.ts"],"names":["X2JS","ALL_ORIGINS_BASE_URL","x2js","getArticles","category","resRaw","fetch","url","resJson","json","resXml","contents","xml2js","rss","channel","item","getArticleText","article","link","resHtml","tmpEl","document","createElement","innerHTML","body","querySelector","remove"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAIA;AACA,MAAMC,oBAAoB,GAAG,qCAA7B;AAEA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,EAAb;AAEA,OAAO,MAAMG,WAAW,GAAG,MAAOC,QAAP,IAA+B;AACtD,QAAMC,MAAM,GAAG,MAAMC,KAAK,CAACL,oBAAoB,GAAGG,QAAQ,CAACG,GAAjC,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMH,MAAM,CAACI,IAAP,EAAtB;AACA,QAAMC,MAAM,GAAGF,OAAO,CAACG,QAAvB;AAEA,SAAOT,IAAI,CAACU,MAAL,CAAiBF,MAAjB,EAAyBG,GAAzB,CAA6BC,OAA7B,CAAqCC,IAA5C;AACH,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAA6B;AAAA;;AACvD,QAAMZ,MAAM,GAAG,MAAMC,KAAK,CAACL,oBAAoB,GAAGgB,OAAO,CAACC,IAAhC,CAA1B;AACA,QAAMV,OAAO,GAAG,MAAMH,MAAM,CAACI,IAAP,EAAtB;AACA,QAAMU,OAAO,GAAGX,OAAO,CAACG,QAAxB;AAEA,QAAMS,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,EAAAA,KAAK,CAACG,SAAN,GAAkBJ,OAAlB;AACA,QAAMK,IAAI,2BAAGJ,KAAK,CAACK,aAAN,CAAoB,WAApB,CAAH,yDAAG,qBAAkCF,SAA/C;AAEAH,EAAAA,KAAK,CAACM,MAAN;AAEA,SAAOF,IAAP;AACH,CAZM","sourcesContent":["import X2JS from \"x2js\"\nimport { ICategory } from \"../models/ICategory\"\nimport { IArticle } from \"../models/IArticle\"\n\n// Used as a workaround for Cross Origin Security Policy\nconst ALL_ORIGINS_BASE_URL = \"https://api.allorigins.win/get?url=\"\n\nconst x2js = new X2JS()\n\nexport const getArticles = async (category: ICategory) => {\n    const resRaw = await fetch(ALL_ORIGINS_BASE_URL + category.url)\n    const resJson = await resRaw.json()\n    const resXml = resJson.contents\n\n    return x2js.xml2js<any>(resXml).rss.channel.item\n}\n\nexport const getArticleText = async (article: IArticle) => {\n    const resRaw = await fetch(ALL_ORIGINS_BASE_URL + article.link)\n    const resJson = await resRaw.json()\n    const resHtml = resJson.contents\n\n    const tmpEl = document.createElement(\"html\")\n    tmpEl.innerHTML = resHtml\n    const body = tmpEl.querySelector(\".news-txt\")?.innerHTML\n\n    tmpEl.remove()\n\n    return body\n}\n"]},"metadata":{},"sourceType":"module"}