{"ast":null,"code":"var _jsxFileName = \"/Users/matteolobello/Developer/Matteo/ansa-reader/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getArticles } from \"./api/api\";\nimport { Article } from \"./components/article/Article\";\nimport { ArticleSkeleton } from \"./components/article/ArticleSkeleton\";\nimport { Menu } from \"./components/menu/Menu\";\nimport { CATEGORIES } from \"./models/ICategory\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [category, setCategory] = useState(CATEGORIES[0]);\n  const [articles, setArticles] = useState();\n  const [shouldLockBodyScroll, setShouldLockBodyScroll] = useState(false);\n  useEffect(() => {\n    setArticles(undefined);\n\n    const fetchData = async () => {\n      try {\n        const fetchedArticles = await getArticles(category);\n        setArticles(fetchedArticles);\n      } catch {\n        alert(\"Error while fetching news\");\n      }\n    };\n\n    fetchData();\n  }, [category, setArticles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: shouldLockBodyScroll ? {\n      position: \"fixed\",\n      overflowX: \"visible\",\n      overflowY: \"hidden\"\n    } : {},\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      onExpandToggle: setShouldLockBodyScroll,\n      onCategorySelected: setCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ANSA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"articles\",\n      children: !articles ? new Array(50).fill(0).map((_, index) => /*#__PURE__*/_jsxDEV(ArticleSkeleton, {}, `skeleton-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this)) : articles === null || articles === void 0 ? void 0 : articles.map((article, index) => /*#__PURE__*/_jsxDEV(Article, { ...article\n      }, `article-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"CsQjH+lHqDoU1Ru/yBgcndaOCl8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteolobello/Developer/Matteo/ansa-reader/src/App.tsx"],"names":["useEffect","useState","getArticles","Article","ArticleSkeleton","Menu","CATEGORIES","App","category","setCategory","articles","setArticles","shouldLockBodyScroll","setShouldLockBodyScroll","undefined","fetchData","fetchedArticles","alert","position","overflowX","overflowY","Array","fill","map","_","index","article"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,SAASC,UAAT,QAAsC,oBAAtC;AACA,OAAO,WAAP;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CACpCK,UAAU,CAAC,CAAD,CAD0B,CAAxC;AAGA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;AACA,QAAM,CAACW,oBAAD,EAAuBC,uBAAvB,IAAkDZ,QAAQ,CAC5D,KAD4D,CAAhE;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW,CAACG,SAAD,CAAX;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,eAAe,GAAG,MAAMd,WAAW,CAACM,QAAD,CAAzC;AACAG,QAAAA,WAAW,CAACK,eAAD,CAAX;AACH,OAHD,CAGE,MAAM;AACJC,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ,KAPD;;AASAF,IAAAA,SAAS;AACZ,GAbQ,EAaN,CAACP,QAAD,EAAWG,WAAX,CAbM,CAAT;AAeA,sBACI;AACI,IAAA,KAAK,EACDC,oBAAoB,GACd;AACIM,MAAAA,QAAQ,EAAE,OADd;AAEIC,MAAAA,SAAS,EAAE,SAFf;AAGIC,MAAAA,SAAS,EAAE;AAHf,KADc,GAMd,EARd;AAAA,4BAWI,QAAC,IAAD;AACI,MAAA,cAAc,EAAEP,uBADpB;AAEI,MAAA,kBAAkB,EAAEJ;AAFxB;AAAA;AAAA;AAAA;AAAA,YAXJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAkBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACK,CAACC,QAAD,GACK,IAAIW,KAAJ,CAAU,EAAV,EACKC,IADL,CACU,CADV,EAEKC,GAFL,CAES,CAACC,CAAD,EAAYC,KAAZ,kBACD,QAAC,eAAD,MAAuB,YAAWA,KAAM,EAAxC;AAAA;AAAA;AAAA;AAAA,cAHR,CADL,GAMKf,QANL,aAMKA,QANL,uBAMKA,QAAQ,CAAEa,GAAV,CAAc,CAACG,OAAD,EAAoBD,KAApB,kBACV,QAAC,OAAD,OAAsCC;AAAtC,SAAe,WAAUD,KAAM,EAA/B;AAAA;AAAA;AAAA;AAAA,cADJ;AAPV;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAxDM;;GAAMlB,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getArticles } from \"./api/api\"\nimport { Article } from \"./components/article/Article\"\nimport { ArticleSkeleton } from \"./components/article/ArticleSkeleton\"\nimport { Menu } from \"./components/menu/Menu\"\nimport { IArticle } from \"./models/IArticle\"\nimport { CATEGORIES, ICategory } from \"./models/ICategory\"\nimport \"./App.css\"\n\nexport const App = () => {\n    const [category, setCategory] = useState<ICategory>(\n        CATEGORIES[0] as ICategory\n    )\n    const [articles, setArticles] = useState<Array<IArticle> | undefined>()\n    const [shouldLockBodyScroll, setShouldLockBodyScroll] = useState<boolean>(\n        false\n    )\n\n    useEffect(() => {\n        setArticles(undefined)\n\n        const fetchData = async () => {\n            try {\n                const fetchedArticles = await getArticles(category)\n                setArticles(fetchedArticles)\n            } catch {\n                alert(\"Error while fetching news\")\n            }\n        }\n\n        fetchData()\n    }, [category, setArticles])\n\n    return (\n        <div\n            style={\n                shouldLockBodyScroll\n                    ? {\n                          position: \"fixed\",\n                          overflowX: \"visible\",\n                          overflowY: \"hidden\",\n                      }\n                    : {}\n            }\n        >\n            <Menu\n                onExpandToggle={setShouldLockBodyScroll}\n                onCategorySelected={setCategory}\n            />\n\n            <h1>ANSA</h1>\n\n            <div className=\"articles\">\n                {!articles\n                    ? new Array(50)\n                          .fill(0)\n                          .map((_: number, index: number) => (\n                              <ArticleSkeleton key={`skeleton-${index}`} />\n                          ))\n                    : articles?.map((article: IArticle, index: number) => (\n                          <Article key={`article-${index}`} {...article} />\n                      ))}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}