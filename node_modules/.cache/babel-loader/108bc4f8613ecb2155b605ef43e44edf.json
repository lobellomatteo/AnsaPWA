{"ast":null,"code":"var _jsxFileName = \"/Users/matteolobello/Developer/Matteo/ansa-reader/src/components/reading-view/ReadingView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getArticleText } from \"../../api/api\";\nimport \"./ReadingView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReadingView = props => {\n  _s();\n\n  const [article, setArticle] = useState(props.article);\n  const [text, setText] = useState();\n  useEffect(() => {\n    setArticle(props.article);\n  }, [props.article]);\n  useEffect(() => {\n    if (!article) {\n      setText(undefined);\n      return;\n    }\n\n    const fetchData = async () => {\n      var _fetchedText$replaceA, _fetchedText$replaceA2, _fetchedText$replaceA3;\n\n      const fetchedText = await getArticleText(article);\n      setText(fetchedText === null || fetchedText === void 0 ? void 0 : (_fetchedText$replaceA = fetchedText.replaceAll(/^\\s+|\\s+$/gm, \" \")) === null || _fetchedText$replaceA === void 0 ? void 0 : (_fetchedText$replaceA2 = _fetchedText$replaceA.replaceAll(/<\\/?[a-z][a-z0-9]*[^<>]*>/gi, \"\")) === null || _fetchedText$replaceA2 === void 0 ? void 0 : (_fetchedText$replaceA3 = _fetchedText$replaceA2.replaceAll(\"&nbsp; \", \"\")) === null || _fetchedText$replaceA3 === void 0 ? void 0 : _fetchedText$replaceA3.trim());\n    };\n\n    fetchData();\n  }, [article]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expanded-panel\",\n    style: {\n      transform: `translate(0, ${article ? \"0\" : \"100vh\"})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close\",\n      onClick: () => setArticle(undefined),\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), !text ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadingView, \"RJlc1N6IuXk0WUDbEH5t8GuyEBk=\");\n\n_c = ReadingView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadingView\");","map":{"version":3,"sources":["/Users/matteolobello/Developer/Matteo/ansa-reader/src/components/reading-view/ReadingView.tsx"],"names":["useEffect","useState","getArticleText","ReadingView","props","article","setArticle","text","setText","undefined","fetchData","fetchedText","replaceAll","trim","transform"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,mBAAP;;AAOA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAmB;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAuBG,KAAK,CAACC,OAA7B,CAAtC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAACF,KAAK,CAACC,OAAP,CAAV;AACH,GAFQ,EAEN,CAACD,KAAK,CAACC,OAAP,CAFM,CAAT;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACK,OAAL,EAAc;AACVG,MAAAA,OAAO,CAACC,SAAD,CAAP;AACA;AACH;;AAED,UAAMC,SAAS,GAAG,YAAY;AAAA;;AAC1B,YAAMC,WAAW,GAAG,MAAMT,cAAc,CAACG,OAAD,CAAxC;AACAG,MAAAA,OAAO,CACHG,WADG,aACHA,WADG,gDACHA,WAAW,CACLC,UADN,CACiB,aADjB,EACgC,GADhC,CADG,oFACH,sBAEMA,UAFN,CAEiB,6BAFjB,EAEgD,EAFhD,CADG,qFACH,uBAGMA,UAHN,CAGiB,SAHjB,EAG4B,EAH5B,CADG,2DACH,uBAIMC,IAJN,EADG,CAAP;AAOH,KATD;;AAWAH,IAAAA,SAAS;AACZ,GAlBQ,EAkBN,CAACL,OAAD,CAlBM,CAAT;AAoBA,sBACI;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,KAAK,EAAE;AACHS,MAAAA,SAAS,EAAG,gBAAeT,OAAO,GAAG,GAAH,GAAS,OAAQ;AADhD,KAFX;AAAA,4BAMI;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACG,SAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAUK,CAACF,IAAD,gBACG;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,gBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9CM;;GAAMJ,W;;KAAAA,W","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getArticleText } from \"../../api/api\"\nimport { IArticle } from \"../../models/IArticle\"\nimport \"./ReadingView.css\"\n\ninterface IProps {\n    article?: IArticle\n    onClose: () => void\n}\n\nexport const ReadingView = (props: IProps) => {\n    const [article, setArticle] = useState<IArticle | undefined>(props.article)\n    const [text, setText] = useState<string>()\n\n    useEffect(() => {\n        setArticle(props.article)\n    }, [props.article])\n\n    useEffect(() => {\n        if (!article) {\n            setText(undefined)\n            return\n        }\n\n        const fetchData = async () => {\n            const fetchedText = await getArticleText(article!)\n            setText(\n                fetchedText\n                    ?.replaceAll(/^\\s+|\\s+$/gm, \" \")\n                    ?.replaceAll(/<\\/?[a-z][a-z0-9]*[^<>]*>/gi, \"\")\n                    ?.replaceAll(\"&nbsp; \", \"\")\n                    ?.trim()\n            )\n        }\n\n        fetchData()\n    }, [article])\n\n    return (\n        <div\n            className=\"expanded-panel\"\n            style={{\n                transform: `translate(0, ${article ? \"0\" : \"100vh\"})`,\n            }}\n        >\n            <button className=\"close\" onClick={() => setArticle(undefined)}>\n                Close\n            </button>\n\n            {!text ? (\n                <span className=\"loading\">Loading...</span>\n            ) : (\n                <span className=\"text\">{text}</span>\n            )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}